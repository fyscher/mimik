Reserved
Group:
    Superblock:
        Magic
        Version
        OS
        OEM
        Bits

        Entry sections per group
        Data sections per group
        Max amount of groups
        Current amount of groups

        Group growth size

        Starting index size
        Index growth size

        Last mount time
        Last written time

        Amount of time since last fsck
        Amount of mounts before forced fsck
        File system state: mounted, dirty, clean
        Error management: ignore, fsck and retry, read-only, panic

        Root's first child

        Volume Name
        Volume UUID

        Flags: final-group, CHS, Stated-Time
    Entry Section: ( times by the amount of entry sections per group )
        Bitmap ( 1 sector )
        INodes

        Bitmap ( 1 sector )
        Hierarchy
    Data Section: ( times by the amount of data sections per group )
        Bitmap ( 1 sector )
        Indexes

        Bitmap ( 1 sector )
        Data

*entry 0 is nothing
*entry 1 is root
*entry 2 is bad-block file
*entry 3 is lost+found directory
*inode 0 is nothing

Hierarchy: 
    Parent
    Left Sibling
    Right Sibling
    INode

    Name

INode:
    Hard link count

    Access time
    Modify time
    Create time

    File mode: Read, Write, Execute, Set UID, Set GID, Shred
    User ID
    Group ID

    Type: DIR FILE CHAR-DEVICE BLOCK-DEVICE FIFO SOFT-LINK

    DIR: Hierarchical Entry

    FILE: Index-Start, Indexes
    FILE: Blocks, Backset

    FIFO/BLOCK-DEVICE/CHAR-DEVICE: Major, Minor

    SOFT-LINK: Block


create path inode
stat path -> inode
modify path inode
delete path
link path path
children path -> [filename...]
write path seek size data
read path seek size -> data

mount path flags
umount
read-super -> sb
write-super sb

mkfs
fsck
resizefs
defragfs



Simple Archive Format:
    Reserved(2 sectors)
    Entry:
        256: Path

        8: Modify time
        8: Create time

        2: File mode: (Read, Write, Execute)x3, Set UID, Set GID, Shred
        8: User ID
        32: User Name
        8: Group ID
        32: Group Name

        1: Type: TERMINATOR(0) DIR(1) FILE(2) CHAR-DEVICE(3) BLOCK-DEVICE(4) FIFO(5) SOFT-LINK(6) HARD-LINK(8)

        10: [
            0: TERMINATOR/DIR/FIFO/SOFT-LINK/HARD-LINK

            10: FILE: Blocks(8), Backset(2)

            10: BLOCK-DEVICE/CHAR-DEVICE: Major(8), Minor(2)
        ]

        4: Magic = "SAF\0"
        4: Version-Major = 1
        2: Version-Minor = 0

        137: reserved
    Data:
        link name /
        file data

struct entry {
    char path[256];

    long mtime;
    long ctime;

    unsigned short mode;

    unsigned long uid;
             char uname[32];
    unsigned long gid;
             char gname[32];

    unsigned char type;

    union {
        struct file {
            unsigned long  blocks;
            unsigned short backset;
        };
        struct device {
            unsigned long  major;
            unsigned short minor;
        };
    };

             char  magic[4];
    unsigned int   versionMajor;
    unsigned short versionMinor;

    unsigned char reserved[137];
} __packed__;

Enter a C compatible environment
Find the kernel ( a very small kernel itself )
Enter the kernel
